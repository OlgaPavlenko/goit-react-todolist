{"version":3,"sources":["TodosInputForm.jsx","TodoItem.jsx","TodosList.jsx","TodosPage.jsx","App.js","index.js"],"names":["useStyles","createUseStyles","todosInputForm","display","flexDirection","form","buttons","justifyContent","marginTop","todoUrgency","TodosInputForm","onSubmit","classes","useState","showForm","setShowForm","value","setValue","urgency","setUrgency","toggleForm","prevValue","handleUrgencyChange","e","target","className","preventDefault","alert","newTodo","id","Date","now","date","isDone","TextField","todoName","label","onChange","type","checked","Button","variant","color","onClick","useStyle","makeStyles","todoItem","backgroundColor","TodoItem","todo","onToggle","onDelete","formattedDate","moment","format","Card","CardActionArea","CardContent","Divider","CardActions","Checkbox","inputProps","IconButton","aria-label","component","TodosList","todos","map","container","width","TodosPage","setTodos","find","prevState","filter","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.5edb8c7f.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { createUseStyles } from \"react-jss\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = createUseStyles({\ntodosInputForm: {\n    display: 'flex',\n    flexDirection: 'column',\n},    \nform: {\n    display: 'flex',\n    flexDirection: 'column',\n},\nbuttons: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginTop: '10px',\n},\ntodoUrgency: {\n    marginTop: '10px',\n},\n});\n\nconst TodosInputForm = ({ onSubmit }) => {\nconst classes = useStyles();\nconst [showForm, setShowForm] = useState(false);\nconst [value, setValue] = useState('');\nconst [urgency, setUrgency] = useState('low');\n\nconst toggleForm = () => setShowForm(prevValue => !prevValue);\nconst handleSubmit = (e) => {\ne.preventDefault();\n\nif (!value) {return alert('enter the text ');};\n\nconst newTodo = {\nid: Date.now(),\nvalue,\nurgency,\ndate: Date.now(),\nisDone: false,\n};\n\nonSubmit(newTodo);\nsetValue('');\nsetUrgency('low');\nsetShowForm(false);\n};\nconst handleUrgencyChange = (e) => setUrgency(e.target.value);\nconst handleInputChange = (e) => setValue(e.target.value);\n\n\n    return (\n        <div className={classes.todosInputForm}>\n{showForm ? (\n<form className={classes.form} onSubmit={handleSubmit}>\n                   <TextField className={classes.todoName} label=\"Enter todo\" value={value} onChange={handleInputChange}/>\n                   <div className={classes.todoUrgency}>\n                       <span>urgency:</span>\n                       <label>\n                           <input type=\"radio\" value='low' checked={urgency === 'low'} onChange={handleUrgencyChange}/>\n                           <span>low</span>\n                       </label>\n                       <label>\n                           <input type=\"radio\" value='medium' checked={urgency === 'medium'} onChange={handleUrgencyChange}/>\n                           <span>medium</span>\n                       </label>\n                       <label>\n                           <input type=\"radio\" value='high' checked={urgency === 'high'} onChange={handleUrgencyChange}/>\n                           <span>high</span>\n                       </label>\n                   </div>\n                   <div className={classes.buttons}>\n                   <Button variant=\"outlined\" color=\"primary\" onClick={toggleForm}>\n                   Cancel\n                   </Button>\n                   <Button type='submit' variant=\"outlined\" color=\"primary\" >\n                   Add todo\n                   </Button>\n                   {/* <button type='submit'>Add todo</button> */}\n                   </div>\n            </form>) : (<button onClick={toggleForm}>+ Add todo</button>)}\n        </div>\n    )\n};\n\nexport default TodosInputForm;","import moment from \"moment\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport { Card, CardActions, CardContent, IconButton, Checkbox, CardActionArea, Divider} from '@material-ui/core';\n\nconst useStyle = makeStyles({\n    todoItem: {\nmarginTop: 10,\nbackgroundColor: '#eeeeff',\n    }\n});\nconst TodoItem = ( {todo: { value, urgency, date, isDone, id }, onToggle, onDelete } ) => {\n    const classes = useStyle();\nconst formattedDate = moment(date).format('YYYY/MM/DD hh:mm:ss');\n\n    const handleDelete = () => onDelete(id);\n    const handleToggle = () => onToggle(id);\n\n    return (\n        <Card className={classes.todoItem}>\n             <CardActionArea>\n            <CardContent>\n<p>{value}</p>\n<p>{urgency}</p>\n<p>{formattedDate}</p>\n</CardContent>\n<Divider />\n<CardActions>\n<Checkbox\n        color=\"primary\"\n        inputProps={{ 'aria-label': 'secondary checkbox' }}\n        checked={isDone} onChange={handleToggle}\n      />\n<IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" onClick={handleDelete}>\n          <DeleteOutlineIcon />\n        </IconButton>\n</CardActions>\n</CardActionArea>\n        </Card>\n    )\n};\n\nexport default TodoItem;","import TodoItem from \"./TodoItem\";\n\nconst TodosList = ({ todos, onDelete, onToggle }) => {\n    return (\n        <div className='todo-list'>\n{\n    todos.map(todo => <TodoItem key={todo.id} todo={todo} onDelete={onDelete} onToggle={onToggle}/>)\n}\n        </div>\n    )\n};\n\n\nexport default TodosList;","import { useState } from \"react\";\nimport TodosInputForm from \"./TodosInputForm\";\nimport TodosList from \"./TodosList\";\nimport { createUseStyles } from \"react-jss\";\n\n\nconst useStyles = createUseStyles({\n    container: {\n        width: '300px'\n    }\n});\nconst TodosPage = () => {  \nconst [todos, setTodos] = useState([]);\n\n    const handleSubmit = (todo) => {\n        if (todos.find(({ value }) => value === todo.value)) {return alert('already excist');};\nsetTodos((prevState) => [todo, ...prevState]);\n    };\n\nconst handleDeleteTodo = (id) => setTodos(prevState => prevState.filter(todo => todo.id !== id));\nconst handleToggleTodo = (id) => {\n    setTodos(prevState => prevState.map(todo => todo.id === id ? {\n        ...todo,\n        isDone: !todo.isDone\n    } : todo));\n};\nconst classes = useStyles();\n    return (\n        <div className={classes.container}>\n        <h1>Todos</h1>\n\n        <TodosInputForm onSubmit={handleSubmit}/>\n        <TodosList todos={todos} onDelete={handleDeleteTodo} onToggle={handleToggleTodo}/>\n    </div>\n    )\n};\n\nexport default TodosPage;","import TodosPage from \"./TodosPage\";\n\nexport default function App() {\n  return (\n      <TodosPage />\n  );\n}\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}